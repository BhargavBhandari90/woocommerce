name: 'Release: Bump version number'

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Type of version bump to perform'
        required: true
        type: choice
        options:
          - stable
          - dev
          - rc
      branch:
        description: 'Source branch to use.'
        type: string
        required: true
        default: ''

permissions:
  contents: write
  pull-requests: write

jobs:
  bump-version:
    name: Bump WooCommerce Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Get current version
        id: get-current-version
        run: |
          version=$( cat plugins/woocommerce/woocommerce.php | grep -oP '(?<=Version: )(.+)' | head -n1 )
          echo "Current version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Compute new version
        id: compute-new-version
        uses: actions/github-script@v7
        with:
          script: |
            const branch = context.payload.inputs.branch;
            const bumpType = context.payload.inputs.bump_type;
            const currentVersion = '${{ steps.get-current-version.outputs.version }}';

            const m = currentVersion.match( /(?<base>\d+\.\d+)\.(?<patch>\d+)(-rc\.(?<rc>\d+))?/ );
            if ( ! m ) {
              core.setFailed( `Current version (${ currentVersion }) does not have the expected format.` );
              return;
            }

            const baseVersion = m.groups['base'];
            const patch       = parseInt( m.groups['patch'] );
            const rc          = m.groups['rc'] ? parseInt( m.groups['rc'] ) : null;

            // Validate current version against bumpType and/or branch.
            if ( 0 !== patch && ( 'dev' === bumpType || 'rc' === bumpType || ( 'stable' === bumpType && rc ) ) ) {
              core.setFailed( `Bump type (${ bumpType }) does not apply to current version (${ currentVersion }).` );
              return;
            }

            if ( ( 'trunk' === branch && ( rc || 'dev' !== bumpType ) ) || ( 'trunk' !== branch && 'dev' === bumpType ) ) {
              core.setFailed( `Bump type (${ bumpType }) does not apply to source branch (${ branch }).` );
              return;
            }

            // Compute new version.
            let newVersion;

            switch ( bumpType ) {
              case 'dev':
                newVersion = `${ ( Number( baseVersion ) + 0.1 ).toFixed( 1 ) }.0-dev`;
                break;

              case 'rc':
                newVersion = `${ baseVersion }.${ patch }-rc.${ rc + 1 }`;
                break;

              case 'stable':
                newVersion = rc ? `${ baseVersion }.0` : `${ baseVersion }.${ patch + 1 }`;
                break;

              default:
                core.setFailed(`Invalid bump type.`);
                return;
            }

            core.setOutput( 'nextVersion', newVersion );
            core.setOutput( 'nextStable', newVersion.replace( /-(dev|rc\.\d+)/, '' ) );

      - name: Bump version in files
        env:
          NEXT_VERSION: ${{ steps.compute-new-version.outputs.nextVersion }}
          NEXT_STABLE: ${{ steps.compute-new-version.outputs.nextStable }}
        run: |
          cd plugins/woocommerce

          # Update version header in woocommerce.php.
          sed -i -E "s/Version: [0-9]+\.[0-9]+\.[0-9]+.*$/Version: $NEXT_VERSION/" woocommerce.php

          # Update changelog in readme.txt.
          sed -i -E "s/^= [0-9]+\.[0-9]+\.[0-9]+ [0-9]{4}-XX-XX =/= $NEXT_STABLE $(date +%Y)-XX-XX =/" readme.txt

          # Update composer.json and package.json.
          for filename in {composer,package}.json; do
            jq --tab ".version = \"$NEXT_STABLE\"" ${filename} > tmp.json
            mv tmp.json ${filename}
          done

          # Update $version property in class-woocommerce.php.
          sed -i -E "s/public \\\$version = '[0-9]+\.[0-9]+\.[0-9]+';/public \\\$version = '$NEXT_STABLE'\;/" includes/class-woocommerce.php

          if git diff --quiet; then
            echo "::error::No changes to commit."
            exit 1
          fi

      - name: Open PR with changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          branch_name="bump-wc-version-to-${{ steps.compute-new-version.outputs.nextVersion }}/${{ github.run_id }}"

          # Configure Git.
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Push changes.
          git checkout -b ${branch_name}
          git commit \
            --all \
            --message 'Bump version to ${{ steps.compute-new-version.outputs.nextVersion }}.'
          git push origin ${branch_name}

          # Open PR.
          gh pr create \
            --title 'Bump WooCommerce version to ${{ steps.compute-new-version.outputs.nextVersion }}' \
            --body 'This PR updates the versions in ${{ inputs.branch }} to ${{ steps.compute-new-version.outputs.nextVersion }}.' \
            --base ${{ inputs.branch }} \
            --head ${branch_name} \
            --reviewer "${{ github.actor }}"
